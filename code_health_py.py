# -*- coding: utf-8 -*-
"""code_health.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SnGuPmYinySEwNLwkeMyrNRMs_pmJTWT
"""

import json

def assess_code_health(complexity, coverage, style_violations):
    health_status = {}

    # Assess complexity
    if complexity <= 10:
        health_status['Complexity'] = 'Good'
    elif complexity <= 20:
        health_status['Complexity'] = 'Average'
    else:
        health_status['Complexity'] = 'Poor'

    # Assess test coverage
    if coverage > 75:
        health_status['Coverage'] = 'Good'
    elif coverage >= 50:
        health_status['Coverage'] = 'Average'
    else:
        health_status['Coverage'] = 'Poor'

    # Assess code style violations
    if style_violations < 5:
        health_status['Code Style'] = 'Good'
    elif style_violations < 15:
        health_status['Code Style'] = 'Average'
    else:
        health_status['Code Style'] = 'Poor'

    return health_status

def get_metrics():
    # Dummy metrics for illustration purposes
    # Replace with actual methods to retrieve metrics
    complexity = 18
    coverage = 80
    style_violations = 3
    return complexity, coverage, style_violations

if __name__ == "__main__":
    complexity, coverage, style_violations = get_metrics()
    result = assess_code_health(complexity, coverage, style_violations)
    print(json.dumps(result))